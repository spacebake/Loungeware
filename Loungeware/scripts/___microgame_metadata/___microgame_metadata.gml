// do not edit this file.
// see datafiles/config.example.json for instructions
// change this file? banned for life
function microgame_register(microgame_name, metadata){
	if(variable_global_exists("___MetaGameLoader") == false){
		//show_message("Building");
		global.___MetaGameLoader = new LW_FGameLoader();
		
		var param_config_version = new LW_FGameLoaderNumberTransformer("config_version", 0);
		param_config_version.add_validator(function(version_number){ return version_number == 1; });
		
		var param_is_enabled = new LW_FGameLoaderBoolTransformer("is_enabled", true);
		param_is_enabled.set_nullable();
		
		var param_view_width = new LW_FGameLoaderNumberTransformer("view_width", -1);
		param_view_width.set_nullable();
		param_view_width.add_validator(function(view_width){
			return view_width == -1 || view_width > 32;	
		});
		
		var param_view_height = new LW_FGameLoaderNumberTransformer("view_height", -1);
		param_view_height.set_nullable();
		param_view_height.add_validator(function(view_height){
			return view_height == -1 || view_height > 32;	
		});
		
		var param_time_seconds = new LW_FGameLoaderNumberTransformer("time_seconds", -1);
		param_time_seconds.set_min(3);
		param_time_seconds.set_max(12);
		
		var param_music_track = new LW_FGameLoaderNumberTransformer("music_track", noone);
		param_music_track.set_nullable();
		
		var param_music_loops = new LW_FGameLoaderNumberTransformer("music_loops", true);
		param_music_loops.set_nullable();
		
		var param_supports_difficulty_scaling = new LW_FGameLoaderBoolTransformer("supports_difficulty_scaling", false);
		param_supports_difficulty_scaling.set_nullable();
		
		var param_credits = new LW_FGameLoaderArrayTransformer("credits", undefined);
		param_credits.set_min(1);
		param_credits.set_inner_validator(function(val){
			return is_string(val);
		});
		
		var rules = [
			param_config_version,
			param_is_enabled,
			param_view_width,
			param_view_height,
			param_time_seconds,
			param_music_track,
			param_music_loops,
			param_supports_difficulty_scaling,
			param_credits,
			new LW_FGameLoaderStringTransformer("game_name", undefined),
			new LW_FGameLoaderStringTransformer("creator_name", undefined),
			new LW_FGameLoaderStringArrayTransformer("prompt", undefined),
			new LW_FGameLoaderRoomTransformer("init_room", undefined),
			new LW_FGameLoaderBoolTransformer("interpolation_on", undefined),
			new LW_FGameLoaderColourTransformer("cartridge_col_primary", undefined),
			new LW_FGameLoaderColourTransformer("cartridge_col_secondary", undefined),
			new LW_FGameLoaderSpriteTransformer("cartridge_label", undefined),
			new LW_FGameLoaderBoolTransformer("default_is_fail", undefined),
			new LW_FGameLoaderDateTransformer("date_added", undefined)
		];
		
		global.___MetaGameLoader.set_rules(rules);
	}
	
	global.___MetaGameLoader.load_game(microgame_name, metadata);
}

function ___init_metadata(){
	SET_TEST_VARS { 
		test_mode_on: false,
		microgame_key: "n8fl_penguin_blast",
	}
	
	//var env = __try_read_json("config.dev.json");
	//if(env != undefined){
	//	show_debug_message("INFO: Loading dev env");
	//	SET_TEST_VARS { 
	//		test_mode_on: variable_struct_exists(env, "test_mode_on") ? env[$"test_mode_on"]: false,
	//		microgame_key: variable_struct_exists(env, "microgame_key") ? env[$"microgame_key"]: "",
	//	}
	//	if (variable_struct_exists(env, "loop_mode")) show_message("Your config.dev.json file is out of date. Please check the template (config.example.json) to see the new structure.");
	//}
	
	return global.___MetaGameLoader.get_games();
}